<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[用Python学习统计学(1)]]></title>
      <url>https://www.maybedeng.com/2017/10/08/%E7%94%A8Python%E5%AD%A6%E4%B9%A0%E7%BB%9F%E8%AE%A1%E5%AD%A6-1/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux(2)]]></title>
      <url>https://www.maybedeng.com/2017/10/07/Linux-2/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<hr>
<h1 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul>
<li><code>delcare tmp</code></li>
<li><code>tmp=shiyanlou</code></li>
<li><code>echo $tmp</code></li>
</ul>
<h2 id="环境变量-1"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h2>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[GitHub & Collaboration]]></title>
      <url>https://www.maybedeng.com/2017/10/06/GitHub-Collaboration/</url>
      <content type="html"><![CDATA[<hr>
<h1 id="What-is-GitHub"><a href="#What-is-GitHub" class="headerlink" title="What is GitHub?"></a>What is GitHub?</h1><blockquote class="blockquote-center"><br><br><strong>GitHub</strong> is a web-based Git or version control repository and Internet hosting service. It is mostly used for code. It offers all of the distributed version control and source code management (SCM) functionality of Git as well as adding its own features.<br><br></blockquote>

<p><u><a href="https://en.wikipedia.org/wiki/GitHub" target="_blank" rel="external">https://en.wikipedia.org/wiki/GitHub</a></u></p>
<a id="more"></a>
<hr>
<h1 id="Working-With-Remotes"><a href="#Working-With-Remotes" class="headerlink" title="Working With Remotes"></a>Working With Remotes</h1><h2 id="Add-A-Remote-Repository"><a href="#Add-A-Remote-Repository" class="headerlink" title="Add A Remote Repository"></a>Add A Remote Repository</h2><p>A remote repository is a repository that’s just like the one you’re using but it’s just stored at a different location. To manage a remote repository, use the git remote command:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git remote add &lt;shortname&gt; https://github.com/UserName/RepoName.git</div><div class="line">git remote -v</div></pre></td></tr></table></figure>
<ul>
<li>It’s possible to have links to multiple different remote repositories.</li>
</ul>
<ul>
<li>A shortname is the name that’s used to refer to a remote repository’s location. Typically the location is a URL, but it could be a file path on the same computer.</li>
</ul>
<ul>
<li>git remote add is used to add a connection to a new remote repository.</li>
</ul>
<ul>
<li>git remote -v is used to see the details about a connection to a remote.</li>
</ul>
<h2 id="Push-Changes-To-A-Remote"><a href="#Push-Changes-To-A-Remote" class="headerlink" title="Push Changes To A Remote"></a>Push Changes To A Remote</h2><h3 id="Sending-Commits"><a href="#Sending-Commits" class="headerlink" title="Sending Commits"></a>Sending Commits</h3><p>To send local commits to a remote repository you need to use the <code>git push</code> command. You provide the remote short name and then you supply the name of the branch that contains the commits you want to push:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push &lt;remote-shortname&gt; &lt;local-branch&gt;:&lt;remote-branch&gt;</div></pre></td></tr></table></figure>
<h2 id="Pull-Changes-From-A-Remote"><a href="#Pull-Changes-From-A-Remote" class="headerlink" title="Pull Changes From A Remote"></a>Pull Changes From A Remote</h2><h3 id="Pulling-Changes-with-git-pull"><a href="#Pulling-Changes-with-git-pull" class="headerlink" title="Pulling Changes with git pull"></a>Pulling Changes with <code>git pull</code></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull &lt;remote-shortname&gt; &lt;remote-branch&gt;</div></pre></td></tr></table></figure>
<p>When git pull is run, the following things happen:</p>
<ul>
<li>the commit(s) on the remote branch are copied to the local repository</li>
</ul>
<ul>
<li>the local tracking branch (origin/master) is moved to point to the most recent commit</li>
</ul>
<ul>
<li>the local tracking branch (origin/master) is merged into the local branch (master)</li>
</ul>
<p>Also, changes can be manually added on GitHub (but this is not recommended, so don’t do it). </p>
<p>###Pull vs Fetch</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull origin master</div></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git fetch origin master</div><div class="line">git merge origin/master</div></pre></td></tr></table></figure>
<hr>
<h1 id="Working-On-another-Developer’s-Repository"><a href="#Working-On-another-Developer’s-Repository" class="headerlink" title="Working On another Developer’s Repository"></a>Working On another Developer’s Repository</h1><h2 id="Fork-A-Repository"><a href="#Fork-A-Repository" class="headerlink" title="Fork A Repository"></a>Fork A Repository</h2><p>Forking is an action that’s done on a hosting service, like GitHub. Forking a repository creates an <code>identical copy</code> of the original repository and moves this copy to your account. You have total control over this forked repository. Modifying your forked repository does not alter the original repository in any way.</p>
<h2 id="Reviewing-Existing-Work"><a href="#Reviewing-Existing-Work" class="headerlink" title="Reviewing Existing Work"></a>Reviewing Existing Work</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git shortlog</div><div class="line">git shortlog -s -n</div><div class="line">git shortlog --author=Surma</div><div class="line">git shortlog --author="Wang Mei"</div><div class="line">git show 5966b66</div><div class="line">git log --grep=bug</div></pre></td></tr></table></figure>
<p><a href="https://classroom.udacity.com/courses/ud456/lessons/5e203cba-a6a7-4f9f-8a72-65ea05b1f74b/concepts/5764b331-ef76-44f5-b627-a917fa97d870" target="_blank" rel="external">Further Research</a></p>
<h2 id="Determining-what-To-Work-On"><a href="#Determining-what-To-Work-On" class="headerlink" title="Determining what To Work On"></a>Determining what To Work On</h2><ul>
<li>Before you start doing any work, make sure to look for the project’s CONTRIBUTING.md file.</li>
<li>Next, it’s a good idea to look at the GitHub issues for the project<ul>
<li>look at the existing issues to see if one is similar to the change you want to contribute.</li>
<li>if necessary create a new issue.</li>
<li>communicate the changes you’d like to make to the project maintainer in the issue.</li>
</ul>
</li>
<li>When you start developing, commit all of your work on a topic branch:<ul>
<li>do not work on the master branch</li>
<li>make sure to give the topic branch clear, descriptive name</li>
</ul>
</li>
<li>As a general best practice for writing commits:<ul>
<li>make frequent, smaller commits</li>
<li>use clear and descriptive commit messages</li>
<li>update the README file, if necessary</li>
</ul>
</li>
</ul>
<hr>
<h1 id="Staying-In-Sync-With-A-Remote-Repository"><a href="#Staying-In-Sync-With-A-Remote-Repository" class="headerlink" title="Staying In Sync With A Remote Repository"></a>Staying In Sync With A Remote Repository</h1><h2 id="Create-a-pull-request"><a href="#Create-a-pull-request" class="headerlink" title="Create a pull request"></a>Create a pull request</h2><p>A pull request is a request for the source repository to pull in your commits and merge them with their project. To create a pull request, a couple of things need to happen:</p>
<ul>
<li>you must fork the source repository</li>
</ul>
<ul>
<li>clone your fork down to your machine</li>
</ul>
<ul>
<li>make some commits (ideally on a topic branch!)</li>
</ul>
<ul>
<li>push the commits back to your fork</li>
</ul>
<ul>
<li>create a new pull request and choose the branch that has your new commits</li>
</ul>
<h2 id="Stay-in-sync-with-source-project"><a href="#Stay-in-sync-with-source-project" class="headerlink" title="Stay in sync with source project"></a>Stay in sync with source project</h2><h3 id="Stars-amp-Watching"><a href="#Stars-amp-Watching" class="headerlink" title="Stars &amp; Watching"></a>Stars &amp; Watching</h3><h3 id="Including-Upstream-Changes"><a href="#Including-Upstream-Changes" class="headerlink" title="Including Upstream Changes"></a>Including Upstream Changes</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add upstream https://github.com/udacity/course-collaboration-travel-plans.git</div></pre></td></tr></table></figure>
<h3 id="Origin-vs-Upstream-Clarification"><a href="#Origin-vs-Upstream-Clarification" class="headerlink" title="Origin vs Upstream Clarification"></a>Origin vs Upstream Clarification</h3><p>One thing that can be a tiny bit confusing right now is the difference between the origin and upstream. What might be confusing is that origin does not refer to the source repository (also known as the “original” repository) that we forked from. Instead, it’s pointing to our forked repository. So even though it has the word origin is not actually the original repository.</p>
<p>We can also rename repo.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git remote rename origin mine</div><div class="line">fit remote rename upstream source-repo</div></pre></td></tr></table></figure>
<h3 id="Pulling-Upstream-Changes"><a href="#Pulling-Upstream-Changes" class="headerlink" title="Pulling Upstream Changes"></a>Pulling Upstream Changes</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull upstream master</div></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git fetch upstream master</div><div class="line">git checkout master</div><div class="line">git merge upstream/master</div><div class="line">git push origin master</div></pre></td></tr></table></figure>
<h2 id="Squash-Commits"><a href="#Squash-Commits" class="headerlink" title="Squash Commits"></a>Squash Commits</h2><p>###The Rebase Command<br>The <code>git rebase</code> command will move commits to have a new base. In the command git rebase -i HEAD~3, we’re telling Git to use HEAD~3 as the base where all of the other commits (HEAD~2, HEAD~1, and HEAD) will connect to.<br>The <code>-i</code> in the command stands for <code>&quot;interactive&quot;</code>. You can perform a rebase in a non-interactive mode. While you’re learning how to rebase, though, I definitely recommend that you do interactive rebasing.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git rebase -i HEAD~3</div></pre></td></tr></table></figure>
<h3 id="Ancestry-References"><a href="#Ancestry-References" class="headerlink" title="Ancestry References"></a>Ancestry References</h3><p>As a brief refresher, <code>HEAD</code> indicates your current location (it could point to several things, but typically it’ll either point to a branch name or directly to a commit’s <code>SHA</code>). The <code>~3</code> part means “three before”, so <code>HEAD~3</code> will be the commit that’s three before the one you’re currently on. We’re using this relative reference to a commit in the <code>git rebase</code> command.</p>
<h3 id="Force-Pushing"><a href="#Force-Pushing" class="headerlink" title="Force Pushing"></a>Force Pushing</h3><p>if you try to push commits and GitHub rejects them, it’s trying to help you, so make sure to review what commits you’re pushing and the commits that are on GitHub to verify you’re not about to overwrite content on your remote repository accidentally!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push -f origin master</div></pre></td></tr></table></figure>
<h3 id="Rebase-Commands"><a href="#Rebase-Commands" class="headerlink" title="Rebase Commands"></a>Rebase Commands</h3><p>Let’s take another look at the different commands that you can do with <code>git rebase</code>:</p>
<ul>
<li>use <code>p</code> or <code>pick</code> – to keep the commit as is</li>
</ul>
<ul>
<li>use <code>r</code> or <code>reword</code> – to keep the commit’s content but alter the commit message</li>
</ul>
<ul>
<li>use <code>e</code> or <code>edit</code> – to keep the commit’s content but stop before committing so that you can:<ul>
<li>add new content or files</li>
<li>remove content or files</li>
<li>alter the content that was going to be committed </li>
</ul>
</li>
</ul>
<ul>
<li>use <code>s</code> or <code>squash</code> – to combine this commit’s changes into the previous commit (the commit above it in the list)</li>
</ul>
<ul>
<li>use <code>f</code> or <code>fixup</code> – to combine this commit’s change into the previous one but drop the commit message</li>
</ul>
<ul>
<li>use <code>x</code> or <code>exec</code> – to run a shell command</li>
</ul>
<h3 id="When-to-rebase"><a href="#When-to-rebase" class="headerlink" title="When to rebase"></a>When to rebase</h3><p>As you’ve seen, the <code>git rebase</code> command is incredibly powerful. It can help you edit commit messages, reorder commits, combine commits, etc. So it truly is a powerhouse of a tool. Now the question becomes “When should you rebase?”. </p>
<p>Whenever you rebase commits, Git will create a new SHA for each commit! This has drastic implications. To Git, the SHA is the identifier for a commit, so a different identifier means it’s a different commit, regardless if the content has changed at all. </p>
<p>So you should not rebase if you have already pushed the commits you want to rebase. If you’re collaborating with other developers, then they might already be working with the commits you’ve pushed. If you then use git rebase to change things around and then force push the commits, then the other developers will now be out of sync with the remote repository. They will have to do some complicated surgery to their Git repository to get their repo back in a working state…and it might not even be possible for them to do that; they might just have to scrap all of their work and start over with your newly-rebased, force-pushed commits.</p>
<p>I recommend that you create a backup branch before rebasing, so that it’s easy to return to your previous state. If you’re happy with the rebase, then you can just delete the backup branch!</p>
<p><a href="https://classroom.udacity.com/courses/ud456/lessons/e295524f-87b6-4981-af74-6b20231dc7c1/concepts/3d9fb9c8-47bc-4dbd-a6d3-09b006be24e4" target="_blank" rel="external">Further Research</a></p>
<hr>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Data Scientist Path]]></title>
      <url>https://www.maybedeng.com/2017/10/05/Data-Scientist-Path/</url>
      <content type="html"><![CDATA[<center>Data Scientist Path</center>

<a id="more"></a>
<hr>
<h1 id="Python-Introduction"><a href="#Python-Introduction" class="headerlink" title="Python Introduction"></a>Python Introduction</h1><ul>
<li>Pyhton Programming: Beginner</li>
<li>Python Programming: Intermediate</li>
</ul>
<hr>
<h1 id="Data-Analysis-and-Visualization"><a href="#Data-Analysis-and-Visualization" class="headerlink" title="Data Analysis and Visualization"></a>Data Analysis and Visualization</h1><ul>
<li>Data Cleaning</li>
<li>Exploratory Data Visualization</li>
</ul>
<ul>
<li>Data Analysis with Pandas</li>
<li>Storytelling Through Data Visualization</li>
</ul>
<hr>
<h1 id="The-Command-Line"><a href="#The-Command-Line" class="headerlink" title="The Command Line"></a>The Command Line</h1><ul>
<li>Command Line: Beginner</li>
<li>Command Line: Intermediate</li>
<li><a href="/2017/10/04/Git-And-Version-Control/" title="Git And Version Control">Git And Version Control</a></li>
<li><a href="/2017/10/06/GitHub-Collaboration/" title="GitHub & Collaboration">GitHub & Collaboration</a>
</li>
</ul>
<hr>
<h1 id="Working-with-Data-Sources"><a href="#Working-with-Data-Sources" class="headerlink" title="Working with Data Sources"></a>Working with Data Sources</h1><ul>
<li>APIS and Web Scraping</li>
<li>SQL Fundaments</li>
<li>SQL and Databases: Intermediate</li>
<li>SQL and Databases: Advanced</li>
</ul>
<hr>
<h1 id="Production-Databases"><a href="#Production-Databases" class="headerlink" title="Production Databases"></a>Production Databases</h1><ul>
<li>Postgres For Data Engineers</li>
</ul>
<hr>
<h1 id="Probability-and-Statistical"><a href="#Probability-and-Statistical" class="headerlink" title="Probability and Statistical"></a>Probability and Statistical</h1><ul>
<li>Probability and Statistical in Python: Beginner</li>
<li>Probability and Statistical in Python: Intermediate</li>
</ul>
<hr>
<h1 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h1><ul>
<li>Machine Learning Fundamentals</li>
<li>Calculus For Machine Learning</li>
<li>Linear Algebra For Machine Learning</li>
<li>Linear Regression For Machine Learning</li>
<li>Machine Learning in Python: Intermediate</li>
<li>Decison Trees</li>
<li>Machine Learning Project</li>
</ul>
<hr>
<h1 id="Advanced-Python-and-Computer-Science"><a href="#Advanced-Python-and-Computer-Science" class="headerlink" title="Advanced Python and Computer Science"></a>Advanced Python and Computer Science</h1><ul>
<li>Data Structures and Algorithms</li>
<li>Python Programming: Advanced</li>
</ul>
<hr>
<h1 id="Advanced-Topics-in-Data-Science"><a href="#Advanced-Topics-in-Data-Science" class="headerlink" title="Advanced Topics in Data Science"></a>Advanced Topics in Data Science</h1><ul>
<li>Kaggle Competitions</li>
<li>Exploring Topical in Science</li>
<li>Natural Language Processing</li>
</ul>
<hr>
<h1 id="Working-with-Large-Datasets"><a href="#Working-with-Large-Datasets" class="headerlink" title="Working with Large Datasets"></a>Working with Large Datasets</h1><ul>
<li>Spark and Map-Reduce</li>
</ul>
<hr>
<h1 id="Handing-Large-Datasets-In-Python"><a href="#Handing-Large-Datasets-In-Python" class="headerlink" title="Handing Large Datasets In Python"></a>Handing Large Datasets In Python</h1><ul>
<li>Processing Large Datasets in Pandas</li>
<li>Optimizing Code Performance On Large Datasets</li>
<li>Algorithms and Data Structures</li>
<li>Recursion and Trees</li>
</ul>
<hr>
<h1 id="Learning-R"><a href="#Learning-R" class="headerlink" title="Learning R"></a>Learning R</h1><ul>
<li>R Programming: Beginner</li>
</ul>
<hr>
<h1 id="Capstone-Projects"><a href="#Capstone-Projects" class="headerlink" title="Capstone Projects"></a>Capstone Projects</h1><ul>
<li>Data Scientist Capstone</li>
</ul>
<hr>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Syllabus </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Data Science]]></title>
      <url>https://www.maybedeng.com/2017/10/05/Data-Science/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><br><br>A nine-course introduction to data science, developmented and taught by leading professors.<br><br><br></blockquote>

<p><u><a href="https://www.coursera.org/specializations/jhu-data-science" target="_blank" rel="external">https://www.coursera.org/specializations/jhu-data-science</a></u></p>
<a id="more"></a>
<hr>
<h1 id="1-Data-scientist’s-toolbox"><a href="#1-Data-scientist’s-toolbox" class="headerlink" title="1.Data scientist’s toolbox"></a>1.Data scientist’s toolbox</h1><h1 id="2-R-Programming"><a href="#2-R-Programming" class="headerlink" title="2.R Programming"></a>2.R Programming</h1><h1 id="3-Getting-and-Cleaning-Data"><a href="#3-Getting-and-Cleaning-Data" class="headerlink" title="3.Getting and Cleaning Data"></a>3.Getting and Cleaning Data</h1><h1 id="4-Exploratory-Data-Analysis"><a href="#4-Exploratory-Data-Analysis" class="headerlink" title="4.Exploratory Data Analysis"></a>4.Exploratory Data Analysis</h1><h1 id="5-Reproducible-Research"><a href="#5-Reproducible-Research" class="headerlink" title="5.Reproducible Research"></a>5.Reproducible Research</h1><h1 id="6-Statistical-Inference"><a href="#6-Statistical-Inference" class="headerlink" title="6.Statistical Inference"></a>6.Statistical Inference</h1><h1 id="7-Regression-Models"><a href="#7-Regression-Models" class="headerlink" title="7.Regression Models"></a>7.Regression Models</h1><h1 id="8-Practical-Machine-Learning"><a href="#8-Practical-Machine-Learning" class="headerlink" title="8.Practical Machine Learning"></a>8.Practical Machine Learning</h1><h1 id="9-Developing-Data-Products"><a href="#9-Developing-Data-Products" class="headerlink" title="9.Developing Data Products"></a>9.Developing Data Products</h1><h1 id="10-Data-Science-Capstone"><a href="#10-Data-Science-Capstone" class="headerlink" title="10.Data Science Capstone"></a>10.Data Science Capstone</h1><hr>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Syllabus </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Experimental Design]]></title>
      <url>https://www.maybedeng.com/2017/10/05/Experimental-Design/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[What is Data?]]></title>
      <url>https://www.maybedeng.com/2017/10/04/What-is-Data/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<h1 id="Definition-of-Data"><a href="#Definition-of-Data" class="headerlink" title="Definition of Data"></a>Definition of Data</h1><blockquote class="blockquote-center"><br><br>Data are values of qualitative or quantitative variables, belonging to a <font color="red">set of items</font>.<br><br></blockquote>

<p><u><a href="http://en.wikipedia.org/wiki/Data" target="_blank" rel="external">http://en.wikipedia.org/wiki/Data</a></u></p>
<!-- more -->
<p><strong>Set of items:</strong> Sometimes called the population; the set of objects you are interested in</p>
<p><strong>Variables:</strong> A measurement or characteristic of an item</p>
<p><strong>Qualitative:</strong> Country of origin, sex, treatment</p>
<p><strong>Quantitative:</strong>  Height, weight, blood pressure</p>
<hr>
<h1 id="What-do-data-look-like"><a href="#What-do-data-look-like" class="headerlink" title="What do data look like?"></a>What do data look like?</h1><hr>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Data Analysis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Types of Questions]]></title>
      <url>https://www.maybedeng.com/2017/10/04/Types-of-Questions/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<h1 id="In-approximate-order-of-difficulty"><a href="#In-approximate-order-of-difficulty" class="headerlink" title="In approximate order of difficulty"></a>In approximate order of difficulty</h1><ul>
<li>Description （描述性分析）</li>
<li>Exploratory （探索性分析）</li>
<li>Inferential （推断分析）</li>
<li>Predictive （预测分析）</li>
<li>Causal （因果分析）</li>
<li>Mechanistic （机理分析）</li>
</ul>
<!-- more -->
<hr>
<h1 id="About-descriptive-analysis"><a href="#About-descriptive-analysis" class="headerlink" title="About descriptive analysis"></a>About descriptive analysis</h1><p><strong>Goal:</strong> Describe a set of data</p>
<ul>
<li>The first kind of data analysis performed</li>
<li>Commonly applied to census data</li>
<li>The description and interpretation are different steps</li>
<li>Descriptions can usually not be generalized without additional statistical modeling</li>
</ul>
<hr>
<h1 id="About-exploratory-analysis"><a href="#About-exploratory-analysis" class="headerlink" title="About exploratory analysis"></a>About exploratory analysis</h1><p><strong>Goal:</strong> Find relationships you didn’t know about</p>
<ul>
<li>Exploratory models are good for discovering new connections</li>
<li>They are also useful for defining future studies</li>
<li>Exploratory analysis are usually not the final say</li>
<li>Exploratory analysis alone should not be used for generalization/predicting</li>
<li>Correlation does not imply causation</li>
</ul>
<hr>
<h1 id="About-inferential-analysis"><a href="#About-inferential-analysis" class="headerlink" title="About inferential analysis"></a>About inferential analysis</h1><p><strong>Goal:</strong> Use a relatively small sample of data to say something about a bigger population</p>
<ul>
<li>Inference is commonly the goal of statistical models</li>
<li>Inference involves estimating both the quantity you care about and your uncertainty about your estimate</li>
<li>Inference depends heavily on both the population and the sampling scheme</li>
</ul>
<hr>
<h1 id="About-predictive-analysis"><a href="#About-predictive-analysis" class="headerlink" title="About predictive analysis"></a>About predictive analysis</h1><p><strong>Goal:</strong> To use the data on some objects to predict values for another object</p>
<ul>
<li>if $X$ predicts $Y$ does not mean that $X$ cause $Y$ </li>
<li>Accurate prediction depends heavily on measuring the right variables</li>
<li>Although there are better and worse prediction models, more data and simple model works really well</li>
<li>Predictive is very hard, especially about the future references</li>
</ul>
<hr>
<h1 id="About-casual-analysis"><a href="#About-casual-analysis" class="headerlink" title="About casual analysis"></a>About casual analysis</h1><p><strong>Goal:</strong> To find out what happens to one variable when you make another variable change</p>
<ul>
<li>Usually randomized studies are required to identify causation</li>
<li>There are approaches to inferring causation in non-randomized studies, but they are complicated and sensitive to assumptions</li>
<li>Causal relationships are usually identified as a average effects, but may not apply to every individual</li>
<li>Causal models are usually the “good standard” for data analysis</li>
</ul>
<hr>
<h1 id="About-mechanistic-analysis"><a href="#About-mechanistic-analysis" class="headerlink" title="About mechanistic analysis"></a>About mechanistic analysis</h1><p><strong>Goal:</strong> Understand the extract changes in variables that lead to changes in other variables for individual objects</p>
<ul>
<li>Incredibly hard to infer, except in simple situations</li>
<li>Usually modeled by a deterministic set of equations(physical/engineering science)</li>
<li>Generally the random components of the data is measurement error</li>
<li>If the equations are known but the paraments are not, the may be infered with data analysis</li>
</ul>
<hr>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Data Analysis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git And Version Control]]></title>
      <url>https://www.maybedeng.com/2017/10/04/Git-And-Version-Control/</url>
      <content type="html"><![CDATA[<hr>
<h1 id="What-is-Git"><a href="#What-is-Git" class="headerlink" title="What is Git?"></a>What is Git?</h1><blockquote class="blockquote-center"><br>    Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.<br></blockquote>

<p><u><a href="http://en.wikipedia.org/wiki/Git" target="_blank" rel="external">http://en.wikipedia.org/wiki/Git</a></u></p>
<a id="more"></a>
<hr>
<h1 id="Git-and-Version-Control-Terminology"><a href="#Git-and-Version-Control-Terminology" class="headerlink" title="Git and Version Control Terminology"></a>Git and Version Control Terminology</h1><p><img src="/images/git1.png" alt=""></p>
<ul>
<li><font color="red">Version Control System (VCS) or Source Code Manager (SCM):</font></li>
<li><font color="red">Commit (snapshot):</font></li>
<li><font color="red">Repository (Repo):</font></li>
<li><font color="red">Working Directory:</font></li>
<li><font color="red">Checkout:</font></li>
<li><font color="red">Staging Area or Staging Index or Index:</font></li>
<li><font color="red">SHA:</font></li>
<li><font color="red">Branch:</font>

</li>
</ul>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/1b369991-f1ca-4d6a-ba8f-e8318d76322f/concepts/5f703930-a95e-47f0-a56b-702ed3a93741" target="_blank" rel="external">Further Research</a></p>
<hr>
<h1 id="Windows-Setup"><a href="#Windows-Setup" class="headerlink" title="Windows Setup"></a>Windows Setup</h1><ul>
<li>Download Git</li>
<li><p>Configuring the Command Prompt on Windows</p>
<ul>
<li><p>Each commit to Git repository will be “tagged” with the username of the person who made the commit</p>
</li>
<li><p>Enter the following commands in Git Bash, one at a time, to set your username and email:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git config --global user.name "Your Name Here"</div><div class="line">git config --global user.email "your_email@example.com"</div><div class="line">git config --list</div></pre></td></tr></table></figure>
</li>
<li><p>You’ll only have to do this once, but you can always change these down the road using the same commands.</p>
</li>
</ul>
</li>
</ul>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/1b369991-f1ca-4d6a-ba8f-e8318d76322f/concepts/8a5af628-7a18-49cf-bbc8-02691762f862" target="_blank" rel="external">Further Research</a></p>
<hr>
<h1 id="Create-A-Git-Repo"><a href="#Create-A-Git-Repo" class="headerlink" title="Create A Git Repo"></a>Create A Git Repo</h1><h2 id="Create-A-Repo-From-Scratch"><a href="#Create-A-Repo-From-Scratch" class="headerlink" title="Create A Repo From Scratch"></a>Create A Repo From Scratch</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir -p udacity-git-course/new-git-project</div><div class="line">cd udacity-git-course/new-git-project</div><div class="line">git init</div></pre></td></tr></table></figure>
<h3 id="Git-Init’s-Effect"><a href="#Git-Init’s-Effect" class="headerlink" title="Git Init’s Effect"></a>Git Init’s Effect</h3><p>Running the git init command sets up all of the necessary files and directories that Git will use to keep track of everything. All of these files are stored in a directory called .git (notice the . at the beginning - that means it’ll be a hidden directory on Mac/Linux). This .git directory is the “repo”! This is where git records all of the commits and keeps track of everything!</p>
<p>Let’s take a brief look at the contents of the .git directory.</p>
<blockquote>
<p>WARNING: Don’t directly edit any files inside the .git directory. This is the heart of the repository. If you change file names and/or file content, git will probably lose track of the files that you’re keeping in the repo, and you could lose a lot of work! It’s okay to look at those files though, but don’t edit or delete them.</p>
</blockquote>
<p><img src="/images/git2.png" alt=""></p>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/437a88fc-15f5-48b8-a6a5-0cf3347e6183/concepts/fa8f761a-d0a2-4be1-a5b9-60116ea4ecd1" target="_blank" rel="external">Further Research</a></p>
<h2 id="Clone-An-Existing-Repo"><a href="#Clone-An-Existing-Repo" class="headerlink" title="Clone An Existing Repo"></a>Clone An Existing Repo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/udacity/course-git-blog-project</div></pre></td></tr></table></figure>
<p><img src="/images/git3.png" alt=""></p>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/437a88fc-15f5-48b8-a6a5-0cf3347e6183/concepts/59082be0-c1af-4839-8ae5-0a182dc5bfe8" target="_blank" rel="external">Further Research</a></p>
<h2 id="Determine-A-Repo’s-Status"><a href="#Determine-A-Repo’s-Status" class="headerlink" title="Determine A Repo’s Status"></a>Determine A Repo’s Status</h2><p>The <code>git status</code> is our key to the mind of Git. It will tell us what Git is thinking and the state of our repository as Git sees it. When you’re first starting out, you should be using the git status command all of the time! Seriously. You should get into the habit of running it after any other command. This will help you learn how Git works and it’ll help you from making (possibly) incorrect assumptions about the state of your files/repository.</p>
<p><img src="/images/git4.png" alt=""></p>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/437a88fc-15f5-48b8-a6a5-0cf3347e6183/concepts/ce648229-7d6c-4ad3-805e-af6a77f38fd0" target="_blank" rel="external">Further Research</a></p>
<hr>
<h1 id="Review-A-Repo’s-History"><a href="#Review-A-Repo’s-History" class="headerlink" title="Review A Repo’s History"></a>Review A Repo’s History</h1><h2 id="git-log-Recap"><a href="#git-log-Recap" class="headerlink" title="git log Recap"></a><code>git log</code> Recap</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git log</div></pre></td></tr></table></figure>
<p>By default, this command displays:</p>
<ul>
<li>the SHA</li>
<li>the author</li>
<li>the date</li>
<li>and the message</li>
</ul>
<p><img src="/images/git5.png" alt=""></p>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/280d5ccf-6440-4d27-97d1-d9f6118359bc/concepts/ee7a6ad0-b3b6-42b4-9823-a79f7c6d0f27" target="_blank" rel="external">Further Research</a></p>
<h2 id="git-log-oneline-Recap"><a href="#git-log-oneline-Recap" class="headerlink" title="git log --oneline  Recap"></a><code>git log --oneline</code>  Recap</h2><p>To recap, the <code>--oneline</code> flag is used to alter how git log displays information:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git log --oneline</div></pre></td></tr></table></figure>
<p>This command:</p>
<ul>
<li>lists one commit per line</li>
</ul>
<ul>
<li>shows the first 7 characters of the commit’s SHA</li>
</ul>
<ul>
<li>shows the commit’s message</li>
</ul>
<p><img src="/images/git6.png" alt=""></p>
<h2 id="git-log-stat-Recap"><a href="#git-log-stat-Recap" class="headerlink" title="git log --stat Recap"></a><code>git log --stat</code> Recap</h2><p>The <code>git log</code> command has a flag that can be used to display the files that have been changed in the commit, as well as the number of lines that have been added or deleted. The flag is <code>--stat</code> (“stat” is short for “statistics”):</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git log --stat</div></pre></td></tr></table></figure>
<p><img src="/images/git7.png" alt=""></p>
<h2 id="git-log-p-Recap"><a href="#git-log-p-Recap" class="headerlink" title="git log -p Recap"></a><code>git log -p</code> Recap</h2><p>To recap, the <code>-p</code> flag (which is the same as the <code>--patch</code> flag) is used to alter how git log displays information:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git log -p</div><div class="line">git log -p fdf5493</div><div class="line">git log --oneline --graph --decorate --all</div></pre></td></tr></table></figure>
<p>This command adds the following to the default output:</p>
<ul>
<li>displays the files that have been modified</li>
</ul>
<ul>
<li>displays the location of the lines that have been added/removed</li>
</ul>
<ul>
<li>displays the actual changes that have been made</li>
</ul>
<p><img src="/images/git8.png" alt=""></p>
<h2 id="git-show-Recap"><a href="#git-show-Recap" class="headerlink" title="git show Recap"></a><code>git show</code> Recap</h2><p><code>git show</code> == <code>git log -p xxxxxxx</code></p>
<ul>
<li><code>--stat</code></li>
<li><code>-p</code>or<code>-patch</code></li>
<li><code>-w</code></li>
</ul>
<hr>
<h2 id="Add-Commits-To-A-Repo"><a href="#Add-Commits-To-A-Repo" class="headerlink" title="Add Commits To A Repo"></a>Add Commits To A Repo</h2><h2 id="git-add-Recap"><a href="#git-add-Recap" class="headerlink" title="git add Recap"></a><code>git add</code> Recap</h2><p>The <code>git add</code> command takes files from the Staging Index and saves them in the repository.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git add &lt;file1&gt; &lt;file2&gt; ... &lt;fileN&gt;</div></pre></td></tr></table></figure>
<p>This command:</p>
<ul>
<li>takes a space-separated list of file names</li>
</ul>
<ul>
<li>alternatively, the period . can be used in place of a list of files to tell Git to add the current directory (and all nested files)</li>
</ul>
<h2 id="git-commit-Recap"><a href="#git-commit-Recap" class="headerlink" title="git commit Recap"></a><code>git commit</code> Recap</h2><p>The <code>git commit</code> command takes files from the Staging Index and saves them in the repository.</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit</div></pre></td></tr></table></figure>
<p>This command:</p>
<ul>
<li>will open the code editor that is specified in your configuration<ul>
<li>(check out the Git configuration step from the first lesson to configure your editor)</li>
</ul>
</li>
</ul>
<p>Inside the code editor:</p>
<ul>
<li>a commit message must be supplied</li>
<li>lines that start with a # are comments and will not be recorded</li>
<li>save the file after adding a commit message</li>
<li>close the editor to make the commit</li>
</ul>
<p>Then, use <code>git log</code> to review the commit you just made!</p>
<h2 id="git-diff-Recap"><a href="#git-diff-Recap" class="headerlink" title="git diff Recap"></a><code>git diff</code> Recap</h2><p>To recap, the <code>git diff</code> command is used to see changes that have been made but haven’t been committed, yet:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git diff</div></pre></td></tr></table></figure>
<p>This command displays:</p>
<ul>
<li>the files that have been modified</li>
</ul>
<ul>
<li>the location of the lines that have been added/removed</li>
</ul>
<ul>
<li>the actual changes that have been made</li>
</ul>
<h2 id="Having-Git-Ignore-Files"><a href="#Having-Git-Ignore-Files" class="headerlink" title="Having Git Ignore Files"></a>Having Git Ignore Files</h2><p>To recap, the <code>.gitignore</code> file is used to tell Git about the files that Git should not track. This file should be placed in the same directory that the .git directory is in.</p>
<hr>
<h1 id="Tagging-Branching-and-Mergeing"><a href="#Tagging-Branching-and-Mergeing" class="headerlink" title="Tagging, Branching, and Mergeing"></a>Tagging, Branching, and Mergeing</h1><h2 id="Tagging"><a href="#Tagging" class="headerlink" title="Tagging"></a>Tagging</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git tag -a v1.0</div><div class="line">git tag</div><div class="line">git log --decorate</div><div class="line">git tag -d v1.0</div><div class="line">git tag -a v1.0 a87984</div></pre></td></tr></table></figure>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/61776182-df3f-4767-9558-5d1591c1a709/concepts/f22ea0e4-4a68-4d3a-91c8-0c19915af71f" target="_blank" rel="external">Further Research</a></p>
<h2 id="Branching"><a href="#Branching" class="headerlink" title="Branching"></a>Branching</h2><p>The <code>git branch</code> command is used to interact with Git’s branches:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch</div></pre></td></tr></table></figure>
<p>It can be used to:</p>
<ul>
<li>list all branch names in the repository      </li>
</ul>
<ul>
<li>create new branches</li>
</ul>
<ul>
<li>delete branches</li>
</ul>
<p><img src="/images/git9.png" alt=""></p>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/61776182-df3f-4767-9558-5d1591c1a709/concepts/89a3a3ca-c47d-4e5f-87c7-cbc838f62232" target="_blank" rel="external">Further Research</a></p>
<h2 id="Merging"><a href="#Merging" class="headerlink" title="Merging"></a>Merging</h2><p>To recap, the <code>git merge</code> command is used to combine branches in Git:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge &lt;other-branch&gt;</div></pre></td></tr></table></figure>
<p>There are two types of merges:</p>
<ul>
<li>Fast-forward merge – the branch being merged in must be ahead of the checked out branch. The checked out branch’s pointer will just be moved forward to point to the same commit as the other branch.</li>
</ul>
<ul>
<li>the regular type of merge<ul>
<li>two divergent branches are combined</li>
<li>a merge commit is created</li>
</ul>
</li>
</ul>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/61776182-df3f-4767-9558-5d1591c1a709/concepts/3a831268-c6c7-4d10-a755-37e1232a2b4c" target="_blank" rel="external">Further Research</a></p>
<h2 id="Merge-Conflicts"><a href="#Merge-Conflicts" class="headerlink" title="Merge Conflicts"></a>Merge Conflicts</h2><p>A merge conflict happens when the same line or lines have been changed on different branches that are being merged. Git will pause mid-merge telling you that there is a conflict and will tell you in what file or files the conflict occurred. To resolve the conflict in a file:</p>
<ul>
<li>locate and remove all lines with merge conflict indicators</li>
</ul>
<ul>
<li>determine what to keep</li>
</ul>
<ul>
<li>save the file(s)</li>
</ul>
<ul>
<li>stage the file(s)</li>
</ul>
<ul>
<li>make a commit</li>
</ul>
<ul>
<li>Be careful that a file might have merge conflicts in multiple parts of the file, so make sure you check the entire file for merge conflict indicators - a quick search for <code>&lt;&lt;&lt;</code> should help you locate all of them.</li>
</ul>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/61776182-df3f-4767-9558-5d1591c1a709/concepts/84037f3a-2ba6-4317-a705-4dc5f342295e" target="_blank" rel="external">Further Research</a></p>
<hr>
<h1 id="Undoing-Changes"><a href="#Undoing-Changes" class="headerlink" title="Undoing Changes"></a>Undoing Changes</h1><h2 id="Changing-The-Last-Commit"><a href="#Changing-The-Last-Commit" class="headerlink" title="Changing The Last Commit"></a>Changing The Last Commit</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit --amend</div></pre></td></tr></table></figure>
<p>Add Forgotten Files To Commit:</p>
<ul>
<li>edit the file(s)</li>
</ul>
<ul>
<li>save the file(s)</li>
</ul>
<ul>
<li>stage the file(s)</li>
</ul>
<ul>
<li>run <code>git commit --amend</code></li>
</ul>
<h2 id="Reverting-A-Commit"><a href="#Reverting-A-Commit" class="headerlink" title="Reverting A Commit"></a>Reverting A Commit</h2><p>To recap, the <code>git revert</code> command is used to reverse a previously made commit:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git revert &lt;SHA-of-commit-to-revert&gt;</div></pre></td></tr></table></figure>
<p>This command:</p>
<ul>
<li>will undo the changes that were made by the provided commit</li>
</ul>
<ul>
<li>creates a new commit to record the change</li>
</ul>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/f02167ad-3ba7-40e0-a157-e5320a5b0dc8/concepts/2e4b1c76-466d-494d-959c-a1f2aef5c7f7" target="_blank" rel="external">Further Research</a></p>
<h2 id="Resetting-Commits"><a href="#Resetting-Commits" class="headerlink" title="Resetting Commits"></a>Resetting Commits</h2><h3 id="Reset-vs-Revert"><a href="#Reset-vs-Revert" class="headerlink" title="Reset vs Revert"></a>Reset vs Revert</h3><p>At first glance, resetting might seem coincidentally close to reverting, but they are actually quite different. Reverting creates a new commit that reverts or undos a previous commit. Resetting, on the other hand, <font color="red">erases commits!</font></p>
<h3 id="The-git-reset-Command"><a href="#The-git-reset-Command" class="headerlink" title="The git reset Command"></a>The <code>git reset</code> Command</h3><p>The <code>git reset</code> command is used to reset (erase) commits:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git reset &lt;reference-to-commit&gt;</div></pre></td></tr></table></figure>
<p>It can be used to:</p>
<ul>
<li>move the HEAD and current branch pointer to the referenced commit</li>
</ul>
<ul>
<li>erase commits</li>
</ul>
<ul>
<li>move committed changes to the staging index</li>
</ul>
<ul>
<li>unstage committed changes</li>
</ul>
<h3 id="Git-Reset’s-Flags"><a href="#Git-Reset’s-Flags" class="headerlink" title="Git Reset’s Flags"></a>Git Reset’s Flags</h3><p>The way that Git determines if it erases, stages previously committed changes, or unstages previously committed changes is by the flag that’s used. The flags are:</p>
<ul>
<li>–mixed</li>
</ul>
<ul>
<li>–soft</li>
</ul>
<ul>
<li>–hard</li>
</ul>
<p>It’s easier to understand how they work with a little animation.</p>
<p><img src="/images/git10.png" alt=""></p>
<h3 id="Backup-Branch"><a href="#Backup-Branch" class="headerlink" title="Backup Branch"></a>Backup Branch</h3><p>Before I do any resetting, I usually create a backup branch on the most-recent commit so that I can get back to the commits if I make a mistake:</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch backup</div></pre></td></tr></table></figure>
<h3 id="Back-To-Normal"><a href="#Back-To-Normal" class="headerlink" title="Back To Normal"></a>Back To Normal</h3><p>If you created the backup branch prior to resetting anything, then you can easily get back to having the master branch point to the same commit as the backup branch. You’ll just need to:</p>
<ul>
<li>remove the uncommitted changes from the working directory</li>
</ul>
<ul>
<li>merge backup into master (which will cause a Fast-forward merge and move master up to the same point as backup)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git checkout -- index.html</div><div class="line">git merge backup</div></pre></td></tr></table></figure>
<p><a href="https://classroom.udacity.com/courses/ud123/lessons/f02167ad-3ba7-40e0-a157-e5320a5b0dc8/concepts/fed81eb7-49b4-4129-9f6b-8201e0796fd8" target="_blank" rel="external">Further Research</a></p>
<hr>
]]></content>
      
        <categories>
            
            <category> Tools </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux(1)]]></title>
      <url>https://www.maybedeng.com/2017/10/04/Command-Line-Basic/</url>
      <content type="html"><![CDATA[<hr>
<p><center>Linux 用户文件目录的基础知识<center></center></center></p>
<a id="more"></a>
<hr>
<h1 id="Linux-学习路径"><a href="#Linux-学习路径" class="headerlink" title="Linux 学习路径"></a>Linux 学习路径</h1><p><img src="images/linux.png" alt=""></p>
<hr>
<h1 id="Linux-用户管理"><a href="#Linux-用户管理" class="headerlink" title="Linux 用户管理"></a>Linux 用户管理</h1><h2 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h2><ul>
<li><code>who</code></li>
</ul>
<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><ul>
<li><code>sudo adduser username</code></li>
</ul>
<h2 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h2><ul>
<li><code>groups username</code></li>
</ul>
<h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><ul>
<li><code>sudo deluser username --remove-home</code></li>
</ul>
<hr>
<h1 id="Linux-文件权限"><a href="#Linux-文件权限" class="headerlink" title="Linux 文件权限"></a>Linux 文件权限</h1><h2 id="查看文件权限"><a href="#查看文件权限" class="headerlink" title="查看文件权限"></a>查看文件权限</h2><ul>
<li><code>ls -alhS</code></li>
</ul>
<h2 id="变更文件所有者"><a href="#变更文件所有者" class="headerlink" title="变更文件所有者"></a>变更文件所有者</h2><ul>
<li><code>sudo chown username filename</code></li>
</ul>
<h2 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h2><ul>
<li><code>sudo chmod 644 username</code></li>
</ul>
<p><a href="https://www.shiyanlou.com/courses/1/labs/3/document" target="_blank" rel="external">Further Research</a></p>
<hr>
<h1 id="Linux-目录结构"><a href="#Linux-目录结构" class="headerlink" title="Linux 目录结构"></a>Linux 目录结构</h1><h2 id="FHS标准"><a href="#FHS标准" class="headerlink" title="FHS标准"></a>FHS标准</h2><p><img src="images/linux2.png" alt=""></p>
<p><a href="http://refspecs.linuxfoundation.org/FHS_2.3/fhs-2.3.pdf" target="_blank" rel="external">FHS_2.3标准文档</a></p>
<h2 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h2><ul>
<li><code>pwd</code></li>
<li><code>tree</code></li>
<li><code>cd</code></li>
</ul>
<hr>
<h1 id="Linux-文件的基本操作"><a href="#Linux-文件的基本操作" class="headerlink" title="Linux 文件的基本操作"></a>Linux 文件的基本操作</h1><h2 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h2><ul>
<li><code>touch</code></li>
<li><code>mkdir</code></li>
</ul>
<h2 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h2><ul>
<li><code>cp</code> </li>
</ul>
<h2 id="移动与重命名"><a href="#移动与重命名" class="headerlink" title="移动与重命名"></a>移动与重命名</h2><ul>
<li><code>mv</code></li>
</ul>
<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><ul>
<li><code>rm</code></li>
</ul>
<h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><ul>
<li><code>cat</code></li>
<li><code>less</code></li>
<li><code>tac</code></li>
<li><code>more</code></li>
</ul>
<ul>
<li><code>head</code></li>
<li><code>tail</code></li>
</ul>
<h2 id="查看文件类型"><a href="#查看文件类型" class="headerlink" title="查看文件类型"></a>查看文件类型</h2><ul>
<li><code>file</code></li>
</ul>
<h2 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h2><ul>
<li><code>vim</code></li>
<li><code>emacs</code></li>
<li><code>nano</code></li>
</ul>
<p><a href="https://www.shiyanlou.com/courses/1/labs/59/document" target="_blank" rel="external">Further Research</a></p>
<hr>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[建立数据产品]]></title>
      <url>https://www.maybedeng.com/2017/10/04/%E5%BB%BA%E7%AB%8B%E6%95%B0%E6%8D%AE%E4%BA%A7%E5%93%81/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[实用机器学习]]></title>
      <url>https://www.maybedeng.com/2017/10/04/%E5%AE%9E%E7%94%A8%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<ul>
<li>Prediction study design</li>
<li>Types of Errors</li>
<li>Cross validation</li>
<li>Scikit-learn</li>
<li>Plotting for prediction</li>
<li>Preprocessing</li>
<li>Predicting with regression</li>
<li>Predicting with trees</li>
<li>Boosting</li>
<li>Bagging</li>
<li>Model blending</li>
<li>Forecasting</li>
</ul>
]]></content>
      
        <categories>
            
            <category> ML </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[回归模型]]></title>
      <url>https://www.maybedeng.com/2017/10/04/Linear-Model/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<ul>
<li>Linear Regression</li>
<li>Multiple Regression</li>
<li>Confounding</li>
<li>Residuals and diagnostics</li>
<li>Prediction using linear models</li>
<li>Model misspecification</li>
<li>Scatterplot smoothing/splines</li>
<li>Machine learning via regression</li>
<li>Resampling inference in regression, bootstrapping, permutation tests</li>
<li>Weighted regression</li>
<li>Mixed models (random intercepts)</li>
</ul>
]]></content>
      
        <categories>
            
            <category> ML </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[统计推断]]></title>
      <url>https://www.maybedeng.com/2017/10/04/%E7%BB%9F%E8%AE%A1%E6%8E%A8%E6%96%AD/</url>
      <content type="html"><![CDATA[<hr>
<center>Statistic</center>

<a id="more"></a>
<hr>
<ul>
<li>Basic probability （基础概率论）</li>
<li>Likehood （似然估计）</li>
<li>Common distributions （常用分布）</li>
<li>Asymptotic （渐进）</li>
<li>Confidence interval （置信区间）</li>
<li>Hypothesis tests （假设检验）</li>
<li>Size （显著性水平）</li>
<li>Power （统计功效）</li>
<li>Bootstrapping （自助法）</li>
<li>Non-parametric tests （非参数估计）</li>
<li>Basic bayesian statistics （基础贝叶斯统计）</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Statistic </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[数据分析包含的文件]]></title>
      <url>https://www.maybedeng.com/2017/10/04/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%8C%85%E5%90%AB%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<ul>
<li>Data<ul>
<li>Raw data</li>
<li>Processed data</li>
</ul>
</li>
<li>Figures<ul>
<li>Exploratory figures</li>
<li>Final figures</li>
</ul>
</li>
<li>Python code<ul>
<li>Raw scripts</li>
<li>Final scripts</li>
<li>Python Markdown files (optional)</li>
</ul>
</li>
<li>Text<ul>
<li>Readme files</li>
<li>Text of analysis</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[可重复性研究]]></title>
      <url>https://www.maybedeng.com/2017/10/04/%E5%8F%AF%E9%87%8D%E5%A4%8D%E6%80%A7%E7%A0%94%E7%A9%B6/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<ul>
<li>Structure of a Data Analysis</li>
<li>Organizing a Data Analysis</li>
<li>Markdown</li>
<li>LaTex</li>
<li>Jupyter Notebook</li>
<li>Evidence-based data analysis</li>
<li>RPubs</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[探索性数据分析]]></title>
      <url>https://www.maybedeng.com/2017/10/04/%E6%8E%A2%E7%B4%A2%E6%80%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<hr>
<center>EDA</center>



<a id="more"></a>
<hr>
<ul>
<li>Principles of Analytic Graphics</li>
<li>Exploratory graphs</li>
<li>Plotting Systems in Python<ul>
<li>matplotlib</li>
<li>seaborn</li>
</ul>
</li>
</ul>
<ul>
<li><p>Hierarchical clustering</p>
</li>
<li><p>K-means clustering</p>
</li>
<li><p>Dimension reduction</p>
<p>​</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[原始数据与处理过的数据]]></title>
      <url>https://www.maybedeng.com/2017/10/04/%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%E4%B8%8E%E5%A4%84%E7%90%86%E8%BF%87%E7%9A%84%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<hr>
<center>DATA</center>

<a id="more"></a>
<hr>
<h2 id="Raw-data"><a href="#Raw-data" class="headerlink" title="Raw data"></a>Raw data</h2><ul>
<li>The origin source of the data</li>
<li>Often hard to use for data analysis</li>
<li>Data analysis includes processing</li>
<li>Raw data may only need to processed once</li>
</ul>
<p><a href="http://en.wikipedia.org/wiki/Raw_data" target="_blank" rel="external"><u>http://en.wikipedia.org/wiki/Raw_data</u></a></p>
<h2 id="Processed-data"><a href="#Processed-data" class="headerlink" title="Processed data"></a>Processed data</h2><ul>
<li>Data that is ready for analysis</li>
<li>Processing can include merging, subsetting, transforming, etc.</li>
<li>There may be standards for processing</li>
<li>All steps should be recorded</li>
</ul>
<p><a href="http://en.wikipedia.org/wiki/Computer_data_processing" target="_blank" rel="external"><u>http://en.wikipedia.org/wiki/Computer_data_processing</u></a></p>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何清洗数据]]></title>
      <url>https://www.maybedeng.com/2017/10/03/%E5%A6%82%E4%BD%95%E6%B8%85%E6%B4%97%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何得到数据]]></title>
      <url>https://www.maybedeng.com/2017/10/03/%E5%A6%82%E4%BD%95%E5%BE%97%E5%88%B0%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<ul>
<li>Raw vs tidy data</li>
<li>Downloading files</li>
<li><p>Reading data</p>
<ul>
<li>Excel, XML, JSON, MySQL, HDFS5, Web,…</li>
</ul>
</li>
<li>Mergeing data</li>
<li>Reshaping data</li>
<li>Summarizing data</li>
<li>Finding and replacing</li>
<li>Data resources</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[数据科学家做什么]]></title>
      <url>https://www.maybedeng.com/2017/10/03/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E5%81%9A%E4%BB%80%E4%B9%88/</url>
      <content type="html"><![CDATA[<hr>
<a id="more"></a>
<hr>
<ul>
<li>Define the question</li>
<li>Define the ideal data set</li>
<li>Determine what data you can access</li>
<li>Obtain the data</li>
<li>Clean the data</li>
<li>Exploratory data analysis</li>
<li>Statistical prediction/modeling</li>
<li>Interpret results</li>
<li>Challenge results</li>
<li>Synthesize/write up results</li>
<li>Create reproducible code</li>
<li>Distribute results to other people</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[数据科学家的工具箱]]></title>
      <url>https://www.maybedeng.com/2017/10/03/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E7%9A%84%E5%B7%A5%E5%85%B7%E7%AE%B1/</url>
      <content type="html"><![CDATA[<hr>
<center>Tools</center>



<a id="more"></a>
<hr>
]]></content>
      
        <categories>
            
            <category> Data Science </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
